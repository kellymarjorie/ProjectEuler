// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

var x = 1; // first fib number
var y = 2; // second fib number
var i = 1; // starting point for while loop.
var max = 100; // number limit.
var sum = [y]; // array for the fib numbers. 1 and 2 are already added.
        
function fibba() {
    while (i < max) { // while i is less than the max number
        for (i = 1; i < max; i++) { // starting at 1, while i is less than max.
            i = y + x; // adds the last two fib numbers to get the next number.
            x = y; // x now equals the number y was
            y = i; // y now equals the sum of y and x
            // if (i % 2 === 0) { // if the sum of the 2 fib numbers is an even number
                sum.push(i); // add that number to the array
            }
        }
    }
    // var total = sum.reduce(function(a, b) {return a +b;}); // adds together the sum of all the numbers (even) in the array.
    return sum;
};

console.log(fibba());

// 4613732